* 0.2.6
    * Removing debug output.
* 0.2.6
    * Monkeypatching (and using) Pyserial's `write()` method to send the
    entire string to the reader at once instead of one character at a
    time.
* 0.2.5
    * Patching attr error.
* 0.2.4
    * Modified `_issue_command()` to close and flush and re-open its serial
    connection if more than X read requests come back w/out data.
    * Adding an optional arg `sleep_milliseconds` to __init__() that provides
    more control over the wait time between issuing commands and requesting
    responses.
* 0.2.3
    * Modified `_issue_command()` logic to essentially "block" the reader
    from receiving and issuing more than 1 command at a time. The workflow is
    now: 1. Issue Command. 2. Block 3. Read until terminiation string from
    reader has been issued. 4. Unblock 5. Return response.
* 0.2.2
    * Adding an optional extra param to `_issue_command()` called
    `milliseconds_to_wait` which allows the user to specify the sleep period
    before a response is requested from the input buffer. This can be helpful
    for commands that take longer than .1 seconds (`t` commands) which operate
    over a longer serial connection (say, longer than 12 ft).
* 0.2.1
    * Patching logic in `get_most_recent_tag_indefinitely()` in which an IO
    leak was possibly causing an error in reading new tags as identified in
    this email: https://gist.github.com/cooncesean/6430126.
* 0.2.0
    * Patching a read bug.
* 0.1.9
    * Adding a new ThinkifyReader method `get_most_recent_tag_indefinitely`
      which utilizes the API's `T6` command and loops indefinitely until a
      valid tag is found (moving the looping logic to the reader (from
      python) *should* be faster).
* 0.1.8
    * Allowing a new optional argument, `tag_id_prefix` to the `TagReader`
      and `Tag` __init__ methods, which allows developers to parse similar
      tag ids using the prefix and access a truncated version of a tag's id
      using the Tag.trunc_id property.
* 0.1.7
    * Added a new method `ThinkifyReader.get_closest_tag()` to fetch the
      closet available tag to the reader.
    * Added the `Tag.signal_strength` property which calcs the Tag's
      strength at read time.
    * Patched the Tag.__init__() api.
* 0.1.6
    * Printing the response in `get_tags()` is now optional.
* 0.1.5
    * Replacing long_description in setup.py with a link to the GitHub repo.
* 0.1.4
    * New release b/c PyPi failed
* 0.1.3
    * Fixing a bug in setup.py with the README file pointer.
* 0.1.2
    * Removed the `ThinkifyReader.get_continuous_tags()` method and cleaned
      up a few docstrings.
* 0.1.1
    * Cleanup of README and documentation for PyPi.
* 0.1.0
    * Initial rev with functionality to obtain a connection to a
      Thinkify Reader and issue commands/receive responses.